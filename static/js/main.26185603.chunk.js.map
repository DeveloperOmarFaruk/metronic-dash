{"version":3,"sources":["redux/reducers/ThemeReducer.js","redux/reducers/index.js","assets/images/logo.png","components/sidebar/Sidebar.js","components/dropdown/Dropdown.js","redux/actions/ThemeAction.js","assets/images/profile.jpg","components/topnav/TopNav.js","components/status-card/StatusCard.js","components/table/Table.js","components/badge/Badge.js","pages/Dashboard.js","pages/Customers.js","components/Routes.js","components/layout/Layout.js","index.js"],"names":["ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","SidebarItem","props","active","className","icon","title","Sidebar","activeItem","sidebar_items","findIndex","item","route","location","pathname","src","logo","alt","map","index","to","display_name","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","document","addEventListener","e","current","contains","target","classList","toggle","remove","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setColor","setMode","getTheme","curr_user","image","user_image","Topnav","placeholder","user","user_menu","content","renderUserMenu","notifications","renderNotificationItem","StatusCard","count","Table","initDataShow","limit","bodyData","slice","Number","useState","dataShow","setDataShow","pages","range","undefined","page","Math","floor","length","Array","keys","currPage","setCurrPage","headData","renderHead","renderBody","onClick","start","end","selectPage","Badge","chartOptions","series","name","data","options","chart","background","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","topCustomers","head","body","latestOrders","header","id","date","price","status","orderStatus","Dashboard","themeReducer","useSelector","statusCards","theme","height","renderCusomerHead","username","order","renderCusomerBody","renderOrderHead","renderOrderBody","customerTableHead","Customers","customerList","email","phone","total_orders","total_spend","Routes","path","exact","component","Layout","dispatch","useDispatch","useEffect","themeClass","localStorage","getItem","colorClass","ThemeAction","render","TopNav","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26185603.chunk.js","sourcesContent":["const ThemeReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_MODE':\n            return {\n                ...state,\n                mode: action.payload\n            }\n        case 'SET_COLOR':\n            return {\n                ...state,\n                color: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\nimport { combineReducers } from \"redux\"\n\nconst rootReducer = combineReducers({ThemeReducer})\n\nexport default rootReducer","export default __webpack_public_path__ + \"static/media/logo.cc18e651.png\";","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport logo from '../../assets/images/logo.png'\n\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\n\nconst SidebarItem = props => {\n\n    const active = props.active ? 'active' : ''\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = props => {\n\n    const activeItem = sidebar_items.findIndex(item => item.route === props.location.pathname)\n\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                <img src={logo} alt=\"company logo\" />\n            </div>\n            {\n                sidebar_items.map((item, index) => (\n                    <Link to={item.route} key={index}>\n                        <SidebarItem\n                            title={item.display_name}\n                            icon={item.icon}\n                            active={index === activeItem}\n                        />\n                    </Link>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, {useRef} from 'react'\n\nimport './dropdown.css'\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst Dropdown = props => {\n\n    const dropdown_toggle_el = useRef(null)\n    const dropdown_content_el = useRef(null)\n\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\n    \n    return (\n        <div className='dropdown'>\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\n                {\n                    props.icon ? <i className={props.icon}></i> : ''\n                }\n                {\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\n                }\n                {\n                    props.customToggle ? props.customToggle() : ''\n                }\n            </button>\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\n                {\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\n                }\n                {\n                    props.renderFooter ? (\n                        <div className=\"dropdown__footer\">\n                            {props.renderFooter()}\n                        </div>\n                    ) : ''\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Dropdown\n","const setMode = mode => {\n    return {\n        type: 'SET_MODE',\n        payload: mode\n    }\n}\n\nconst setColor = color => {\n    return {\n        type: 'SET_COLOR',\n        payload: color\n    }\n}\n\nconst getTheme = () => {\n    return {\n        type: 'GET_THEME'\n    }\n}\n\nconst exportDefault = {\n    setColor,\n    setMode,\n    getTheme\n}\n\nexport default exportDefault","export default __webpack_public_path__ + \"static/media/profile.eae24130.jpg\";","import React from \"react\";\n\nimport \"./topnav.css\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Dropdown from \"../dropdown/Dropdown\";\n\nimport ThemeMenu from \"../thememenu/ThemeMenu\";\n\nimport notifications from \"../../assets/JsonData/notification.json\";\n\nimport user_image from \"../../assets/images/profile.jpg\";\n\nimport user_menu from \"../../assets/JsonData/user_menus.json\";\n\nconst curr_user = {\n  display_name: \"Developer.OmarFaruk\",\n  image: user_image,\n};\n\nconst renderNotificationItem = (item, index) => (\n  <div className=\"notification-item\" key={index}>\n    <i className={item.icon}></i>\n    <span>{item.content}</span>\n  </div>\n);\n\nconst renderUserToggle = (user) => (\n  <div className=\"topnav__right-user\">\n    <div className=\"topnav__right-user__image\">\n      <img src={user.image} alt=\"\" />\n    </div>\n    <div className=\"topnav__right-user__name\">{user.display_name}</div>\n  </div>\n);\n\nconst renderUserMenu = (item, index) => (\n  <Link to=\"/\" key={index}>\n    <div className=\"notification-item\">\n      <i className={item.icon}></i>\n      <span>{item.content}</span>\n    </div>\n  </Link>\n);\n\nconst Topnav = () => {\n  return (\n    <div className=\"topnav\">\n      <div className=\"topnav__search\">\n        <input type=\"text\" placeholder=\"Search here...\" />\n        <i className=\"bx bx-search\"></i>\n      </div>\n      <div className=\"topnav__right\">\n        <div className=\"topnav__right-item\">\n          {/* dropdown here */}\n          <Dropdown\n            customToggle={() => renderUserToggle(curr_user)}\n            contentData={user_menu}\n            renderItems={(item, index) => renderUserMenu(item, index)}\n          />\n        </div>\n        <div className=\"topnav__right-item\">\n          <Dropdown\n            icon=\"bx bx-bell\"\n            badge=\"12\"\n            contentData={notifications}\n            renderItems={(item, index) => renderNotificationItem(item, index)}\n            renderFooter={() => <Link to=\"/\">View All</Link>}\n          />\n          {/* dropdown here */}\n        </div>\n        <div className=\"topnav__right-item\">{/* <ThemeMenu /> */}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Topnav;\n","import React from \"react\";\n\nimport \"./statuscard.css\";\n\nconst StatusCard = (props) => {\n  return (\n    <div className=\"status-card\">\n      <div className=\"status-card__icon\">\n        <i className={props.icon}></i>\n      </div>\n      <div className=\"status-card__info\">\n        <h4>{props.count}</h4>\n        <span>{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default StatusCard;\n","import React, {useState} from 'react'\n\nimport './table.css'\n\nconst Table = props => {\n\n    const initDataShow = props.limit && props.bodyData ? props.bodyData.slice(0, Number(props.limit)) : props.bodyData\n\n    const [dataShow, setDataShow] = useState(initDataShow)\n\n    let pages = 1\n\n    let range = []\n\n    if (props.limit !== undefined) {\n        let page = Math.floor(props.bodyData.length / Number(props.limit))\n        pages = props.bodyData.length % Number(props.limit) === 0 ? page : page + 1\n        range = [...Array(pages).keys()]\n    }\n\n    const [currPage, setCurrPage] = useState(0)\n\n    const selectPage = page => {\n        const start = Number(props.limit) * page\n        const end = start + Number(props.limit)\n\n        setDataShow(props.bodyData.slice(start, end))\n\n        setCurrPage(page)\n    }\n\n    return (\n        <div>\n            <div className=\"table-wrapper\">\n                <table>\n                    {\n                        props.headData && props.renderHead ? (\n                            <thead>\n                                <tr>\n                                    {\n                                        props.headData.map((item, index) => props.renderHead(item, index))\n                                    }\n                                </tr>\n                            </thead>\n                        ) : null\n                    }\n                    {\n                        props.bodyData && props.renderBody ? (\n                            <tbody>\n                                {\n                                    dataShow.map((item, index) => props.renderBody(item, index))\n                                }\n                            </tbody>\n                        ) : null\n                    }\n                </table>\n            </div>\n            {\n                pages > 1 ? (\n                    <div className=\"table__pagination\">\n                        {\n                            range.map((item, index) => (\n                                <div key={index} className={`table__pagination-item ${currPage === index ? 'active' : ''}`} onClick={() => selectPage(index)}>\n                                    {item + 1}\n                                </div>\n                            ))\n                        }\n                    </div>\n                ) : null\n            }\n        </div>\n    )\n}\n\nexport default Table\n","import React from 'react'\n\nimport './badge.css'\n\nconst Badge = props => {\n    return (\n        <span className={`badge badge-${props.type}`}>\n            {props.content}\n        </span>\n    )\n}\n\nexport default Badge\n","import React, {useEffect} from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Chart from 'react-apexcharts'\n\nimport { useSelector } from 'react-redux'\n\nimport StatusCard from '../components/status-card/StatusCard'\n\nimport Table from '../components/table/Table'\n\nimport Badge from '../components/badge/Badge'\n\nimport statusCards from '../assets/JsonData/status-card-data.json'\n\nconst chartOptions = {\n    series: [{\n        name: 'Online Customers',\n        data: [40,70,20,90,36,80,30,91,60]\n    }, {\n        name: 'Store Customers',\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconst topCustomers = {\n    head: [\n        'user',\n        'total orders',\n        'total spending'\n    ],\n    body: [\n        {\n            \"username\": \"john doe\",\n            \"order\": \"490\",\n            \"price\": \"$15,870\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"250\",\n            \"price\": \"$12,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"120\",\n            \"price\": \"$10,840\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"110\",\n            \"price\": \"$9,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"80\",\n            \"price\": \"$8,840\"\n        }\n    ]\n}\n\nconst renderCusomerHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderCusomerBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.username}</td>\n        <td>{item.order}</td>\n        <td>{item.price}</td>\n    </tr>\n)\n\nconst latestOrders = {\n    header: [\n        \"order id\",\n        \"user\",\n        \"total price\",\n        \"date\",\n        \"status\"\n    ],\n    body: [\n        {\n            id: \"#OD1711\",\n            user: \"john doe\",\n            date: \"17 Jun 2021\",\n            price: \"$900\",\n            status: \"shipping\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"pending\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"refund\"\n        }\n    ]\n}\n\nconst orderStatus = {\n    \"shipping\": \"primary\",\n    \"pending\": \"warning\",\n    \"paid\": \"success\",\n    \"refund\": \"danger\"\n}\n\nconst renderOrderHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderOrderBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.id}</td>\n        <td>{item.user}</td>\n        <td>{item.price}</td>\n        <td>{item.date}</td>\n        <td>\n            <Badge type={orderStatus[item.status]} content={item.status}/>\n        </td>\n    </tr>\n)\n\nconst Dashboard = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        {\n                            statusCards.map((item, index) => (\n                                <div className=\"col-6\" key={index}>\n                                    <StatusCard\n                                        icon={item.icon}\n                                        count={item.count}\n                                        title={item.title}\n                                    />\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card full-height\">\n                        {/* chart */}\n                        <Chart\n                            options={themeReducer === 'theme-mode-dark' ? {\n                                ...chartOptions.options,\n                                theme: { mode: 'dark'}\n                            } : {\n                                ...chartOptions.options,\n                                theme: { mode: 'light'}\n                            }}\n                            series={chartOptions.series}\n                            type='line'\n                            height='100%'\n                        />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>top customers</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={topCustomers.head}\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\n                                bodyData={topCustomers.body}\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>latest orders</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={latestOrders.header}\n                                renderHead={(item, index) => renderOrderHead(item, index)}\n                                bodyData={latestOrders.body}\n                                renderBody={(item, index) => renderOrderBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\n\nimport Table from '../components/table/Table'\n\nimport customerList from '../assets/JsonData/customers-list.json'\n\nconst customerTableHead = [\n    '',\n    'name',\n    'email',\n    'phone',\n    'total orders',\n    'total spend',\n    'location'\n]\n\nconst renderHead = (item, index) => <th key={index}>{item}</th>\n\nconst renderBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.id}</td>\n        <td>{item.name}</td>\n        <td>{item.email}</td>\n        <td>{item.phone}</td>\n        <td>{item.total_orders}</td>\n        <td>{item.total_spend}</td>\n        <td>{item.location}</td>\n    </tr>\n)\n\nconst Customers = () => {\n    return (\n        <div>\n            <h2 className=\"page-header\">\n                customers\n            </h2>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card__body\">\n                            <Table\n                                limit='10'\n                                headData={customerTableHead}\n                                renderHead={(item, index) => renderHead(item, index)}\n                                bodyData={customerList}\n                                renderBody={(item, index) => renderBody(item, index)}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Customers\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Dashboard from \"../pages/Dashboard\";\nimport Customers from \"../pages/Customers\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Dashboard} />\n      <Route path=\"/metronic-dash\" exact component={Dashboard} />\n      <Route path=\"/customers\" component={Customers} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, {useEffect} from 'react'\n\nimport './layout.css'\n\nimport Sidebar from '../sidebar/Sidebar'\nimport TopNav from '../topnav/TopNav'\nimport Routes from '../Routes'\n\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst Layout = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\n\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\n\n        dispatch(ThemeAction.setMode(themeClass))\n\n        dispatch(ThemeAction.setColor(colorClass))\n    }, [dispatch])\n\n    return (\n        <BrowserRouter>\n            <Route render={(props) => (\n                <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                    <Sidebar {...props}/>\n                    <div className=\"layout__content\">\n                        <TopNav/>\n                        <div className=\"layout__content-main\">\n                            <Routes/>\n                        </div>\n                    </div>\n                </div>\n            )}/>\n        </BrowserRouter>\n    )\n}\n\nexport default Layout\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createStore } from \"redux\";\n\nimport { Provider } from \"react-redux\";\n\nimport rootReducer from \"./redux/reducers\";\n\nimport \"./assets/boxicons-2.0.7/css/boxicons.min.css\";\nimport \"./assets/css/grid.css\";\nimport \"./assets/css/theme.css\";\nimport \"./assets/css/index.css\";\n\nimport Layout from \"./components/layout/Layout\";\n\nconst store = createStore(rootReducer);\n\ndocument.title = \"Servicing | Developer.OmarFaruk\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Layout />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}